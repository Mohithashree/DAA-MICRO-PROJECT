import java.util.Arrays;
import java.util.Scanner;
public class BinarySearch {
    // Recursive Binary Search Function (Decrease and Conquer)
    public static int binarySearch(int[] arr, int key, int left, int right) {
        if (left > right) return -1; // Key not found
        int mid = left + (right - left) / 2;
        if (arr[mid] == key) return mid;
        else if (key < arr[mid]) return binarySearch(arr, key, left, mid - 1); // Search left half
        else return binarySearch(arr, key, mid + 1, right); // Search right half
    }
        public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // Input array size
        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();
        int[] arr = new int[n];
        System.out.println("Enter the elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr);
        System.out.println("Sorted array: " + Arrays.toString(arr));
        // Input search key
        System.out.print("Enter the key to search: ");
        int key = sc.nextInt();
        // Perform Binary Search
        int index = binarySearch(arr, key, 0, n - 1);
        // Output result
        if (index != -1) {
            System.out.println("Key " + key + " found at index " + index + ".");
        } else {
            System.out.println("Key " + key + " not found in the array.");
        }
        sc.close();
    }
}
